name: Run e2e Tests

on:
  workflow_dispatch:
    inputs:
      prNumber:
        description: "(Optional) PR Number. If you specify a value the value of the branch field will be ignored."
        required: false
        default: ""

jobs:
  run-e2e-tests-on-utils:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: dev
      PR_NUMBER: ${{ inputs.prNumber }}
    permissions:
      id-token: write # needed to interact with GitHub's OIDC Token endpoint.
      contents: read
    strategy:
      matrix:
        package: [logger, metrics, tracer]
        version: [14, 16, 18]
      fail-fast: false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      # If we pass a PR Number when triggering the workflow we will retrieve the PR info and get its headSHA
      - name: Extract PR details
        id: extract_PR_details
        if: ${{ inputs.prNumber != '' }}
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('.github/scripts/get_pr_info.js');
            await script({github, context, core});
      # Only if a PR Number was passed and the headSHA of the PR extracted,
      # we checkout the PR at that point in time
      - name: Checkout PR code
        if: ${{ inputs.prNumber != '' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.extract_PR_details.outputs.headSHA }}
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.version }}
      - name: Setup npm
        run: npm i -g npm@next-8
      - name: Install dependencies
        # This installs all the dependencies of ./packages/*
        # See https://github.com/npm/cli/issues/4475 to see why --foreground-scripts
        run: npm ci --foreground-scripts
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_TO_ASSUME }}
          aws-region: eu-west-1
      - name: Run integration tests on utils
        run: |
          RUNTIME=nodejs${{ matrix.version }}x npm run test:e2e -w packages/${{ matrix.package }}
  layer-e2e-tests:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: dev
      PR_NUMBER: ${{ inputs.prNumber }}
    permissions:
      id-token: write # needed to interact with GitHub's OIDC Token endpoint.
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version: [14, 16, 18]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      # If we pass a PR Number when triggering the workflow we will retrieve the PR info and get its headSHA
      - name: Extract PR details
        id: extract_PR_details
        if: ${{ inputs.prNumber != '' }}
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('.github/scripts/get_pr_info.js');
            await script({github, context, core});
      # Only if a PR Number was passed and the headSHA of the PR extracted,
      # we checkout the PR at that point in time
      - name: Checkout PR code
        if: ${{ inputs.prNumber != '' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.extract_PR_details.outputs.headSHA }}
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          # Always use version 18
          node-version: 18
      - name: Setup npm
        run: npm i -g npm@next-8
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_TO_ASSUME }}
          aws-region: eu-west-1
      - name: Cache node modules for commons
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: "./node_modules"
          # Use the combo between node version, name, and SHA-256 hash of the lock file as cache key so that
          # if one of them changes the cache is invalidated/discarded
          key: ${{ matrix.version }}-cache-utils-node-modules-${{ hashFiles('./package-lock.json') }}
      - name: Install dependencies
        # We can skip the install if there was a cache hit
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        # See https://github.com/npm/cli/issues/4475 to see why --foreground-scripts
        run: npm ci --foreground-scripts
      - name: Build packages
        # If there's a cache hit we still need to manually build the packages
        # this would otherwise have been done automatically as a part of the
        # postinstall npm hook
        if: steps.cache-node-modules.outputs.cache-hit == 'true'
        run: |
          npm run build -w packages/commons
      - name: Run integration test on layers
        run: |
          npm ci --foreground-scripts
          RUNTIME=nodejs${{ matrix.version }}.x npm run test:e2e
        working-directory: layer-publisher
